[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [{ name = "Jacob Reinhold", email = "jcreinhold@gmail.com" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]
dependencies = [
    "nibabel>=5.0.0",
    "numpy>=1.24.0",
    "scikit-fuzzy>=0.4.2",
    "scikit-learn>=1.3.0",
    "scipy>=1.10.0",
]
description = "Normalize intensities of MR image modalities"
license = { file = "LICENSE" }
name = "intensity-normalization"
readme = "README.md"
requires-python = ">=3.11"
version = "0.3.0"

[project.optional-dependencies]
dev = ["mypy>=1.0.0", "pytest-cov>=4.0.0", "pytest>=7.0.0", "ruff>=0.1.0"]

[project.urls]
Documentation = "https://intensity-normalization.readthedocs.io/"
Homepage = "https://github.com/jcreinhold/intensity-normalization"
Issues = "https://github.com/jcreinhold/intensity-normalization/issues"
Repository = "https://github.com/jcreinhold/intensity-normalization"

[project.scripts]
intensity-normalize = "intensity_normalization.cli:main"

[tool.ruff]
line-length = 120
src = ["intensity_normalization"]
target-version = "py311"

[tool.ruff.lint]
ignore = [
    "E501",    # Line too long (handled by formatter)
    "N806",    # Variable name should be lowercase (for numpy/scientific code)
    "PLR0913", # Too many arguments
    "PLR2004", # Magic value used in comparison
]
select = [
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "E",
    "ERA",  # eradicate
    "F",
    "I",    # isort
    "N",    # pep8-naming
    "PERF", # perflint
    "PIE",  # flake8-pie
    "PL",   # pylint
    "PTH",  # flake8-use-pathlib
    "RET",  # flake8-return
    "RUF",  # ruff-specific
    "SIM",  # flake8-simplify
    "UP",   # pyupgrade
    "W",    # pycodestyle, pyflakes
]

[tool.ruff.lint.isort]
known-first-party = ["intensity_normalization"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*" = ["PLR2004", "PLC0415"]

[tool.pytest.ini_options]
addopts = "--cov=intensity_normalization --cov-report=term-missing --cov-report=html --strict-markers"
markers = [
    "integration: marks tests as integration tests",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
python_classes = ["Test*"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
testpaths = ["tests"]

[tool.mypy]
ignore_missing_imports = true
no_implicit_optional = true
python_version = "3.11"
show_column_numbers = true
show_error_codes = true
strict_optional = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.coverage.run]
omit = ["*/test_*", "*/tests/*"]
source = ["intensity_normalization"]

[tool.coverage.report]
exclude_lines = [
    "def __repr__",
    "if TYPE_CHECKING:",
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
]

[dependency-groups]
dev = ["mypy>=1.16.1", "pytest-cov>=6.2.1", "pytest>=8.4.1", "ruff>=0.12.2"]
